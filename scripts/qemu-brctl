#!/bin/sh
#
# qemu-brctl - control bridge for QEMU
#
# Copyright (c) 2014 Eric Le Bihan <eric.le.bihan.dev@free.fr>
#
# This project is released under the MIT/X11 license.
#

set -e

__VERSION__='0.3.0'

IFACE=eth0
GROUP=admin

usage() {
	cat <<EOF
Usage: $(basename $0) [OPTIONS] <up|down>

Options:

  -g GROUP    set group
  -i IFACE    set interface name
EOF
}

check_tools() {
	for tool in brctl openvpn; do
		which ${tool} &>/dev/null
		if [ $? -ne 0 ]; then
			echo "Please install ${tool}" 1>&2
			exit 3
		fi
	done
}

get_iface_addr() {
	ip addr show dev $1 | awk '$1 == "inet" { print gensub(/(.+)\/(.+)/, "\\1", "g", $2)}'
}

get_iface_broadcast() {
	ip addr show dev $1 | awk '$1 == "inet" { print $4 }'
}

set_br_up() {
	local address=$(get_iface_addr ${IFACE})
	local broadcast=$(get_iface_broadcast ${IFACE})

	modprobe tun
	openvpn --mktun --dev tap0  --group ${GROUP}
	ifconfig tap0 0.0.0.0 promisc up
	ifconfig ${IFACE} down
	ifconfig ${IFACE} 0.0.0.0 promisc up

	brctl addbr br0
	brctl addif br0 ${IFACE}
	brctl addif br0 tap0
	brctl stp br0 off

	ifconfig br0 ${address} netmask 255.255.255.0 broadcast ${broadcast}
}

set_br_down() {
	ifconfig br0 down
	brctl delbr br0
	openvpn --rmtun --dev tap0
	ifconfig ${IFACE} -promisc
	ifconfig ${IFACE} up
}

while getopts "hvg:i:" option; do
	case $option in
		h)
			usage; exit 0
			;;
		v)
			echo ${__VERSION__}; exit 0;
			;;
		g)
			GROUP=${OPTARG}
			;;
		i)
			IFACE=${OPTARG}
			;;
		*)
			echo "Unknown option" >&2; exit 2
			;;
	esac
done

shift $((${OPTIND} - 1))

if [ $# -ne 1 ]; then
	usage
	exit 1
fi

check_tools

case "$1" in
	up)
		set_br_up
		;;
	down)
		set_br_down
		;;
	*)
		echo "Unknown command" 2>&1
		exit 111
		;;
esac
